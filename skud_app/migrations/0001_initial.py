# Generated by Django 3.1.3 on 2020-11-18 09:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('cardType', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('levelDesc', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SBC',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('sbcStatus', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('userType', models.CharField(max_length=255)),
                ('userFIO', models.CharField(max_length=255)),
                ('userLevels', models.ManyToManyField(to='skud_app.Level')),
            ],
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('readerType', models.CharField(max_length=255)),
                ('readerStatus', models.CharField(max_length=255)),
                ('readerLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Reader_levels', to='skud_app.level')),
                ('readerSbc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Reared_SBCs', to='skud_app.sbc')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logDatetime', models.DateTimeField()),
                ('logAction', models.CharField(max_length=255)),
                ('logResult', models.CharField(max_length=255)),
                ('logCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='skud_app.card')),
                ('logLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='skud_app.level')),
                ('logReader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readers', to='skud_app.reader')),
                ('logSbc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SBCs', to='skud_app.sbc')),
                ('logUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='skud_app.user')),
            ],
        ),
        migrations.AddField(
            model_name='card',
            name='cardUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Ð¡ard_users', to='skud_app.user'),
        ),
        migrations.CreateModel(
            name='DbUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
